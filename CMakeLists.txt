cmake_minimum_required(VERSION 3.10)

project(Terminal3D VERSION 0.1)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/Build/")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/Build/Libraries/")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/Build/Binaries/")

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_UNITY_BUILD False)

set(SOURCE_DIR "${PROJECT_SOURCE_DIR}/Source")

##### ENGINE #####

set(ENGINE_LIB_NAME "Engine")
set(ENGINE_DIR "${SOURCE_DIR}/Engine")

file(GLOB_RECURSE ENGINE_HEADERS "${ENGINE_DIR}/*.h" "${ENGINE_DIR}/*.hpp")
file(GLOB_RECURSE ENGINE_SOURCES "${ENGINE_DIR}/*.cpp")

add_library(${ENGINE_LIB_NAME} STATIC ${ENGINE_HEADERS} ${ENGINE_SOURCES})

set(ENGINE_PUBLIC_HEADER_PATHS "")

foreach(HEADER_PATH IN LISTS ENGINE_HEADERS)
	
	if(HEADER_PATH MATCHES "Public")
	
		get_filename_component(PATH_DIRECTORY ${HEADER_PATH} PATH)
		message(${PATH_DIRECTORY})
		list(APPEND ENGINE_PUBLIC_HEADER_PATHS ${PATH_DIRECTORY})

	endif()

endforeach()

target_include_directories(${ENGINE_LIB_NAME} PRIVATE ${ENGINE_PUBLIC_HEADER_PATHS} ${ENGINE_DIR})

set_target_properties(${ENGINE_LIB_NAME} PROPERTIES LINKER_LANGUAGE CXX)

source_group(TREE ${SOURCE_DIR} FILES ${ENGINE_HEADERS} ${ENGINE_SOURCES})

##### FRAMEWORK #####

set(FRAMEWORK_NAME "Framework")
set(FRAMEWORK_DIR "${SOURCE_DIR}/Framework")

file(GLOB_RECURSE FRAMEWORK_PUBLIC_HEADERS "${FRAMEWORK_DIR}/*.h")
file(GLOB_RECURSE FRAMEWORK_PUBLIC_SOURCES "${FRAMEWORK_DIR}/*.cpp")

list(FILTER FRAMEWORK_PUBLIC_HEADERS EXCLUDE REGEX "Private")

set(FRAMEWORK_PRIVATE_HEADERS ${ENGINE_DIR})
set(FRAMEWORK_PRIVATE_SOURCES ${ENGINE_DIR})

add_executable(${FRAMEWORK_NAME} ${FRAMEWORK_PUBLIC_HEADERS} ${FRAMEWORK_PRIVATE_HEADERS} ${FRAMEWORK_PUBLIC_SOURCES} ${FRAMEWORK_PRIVATE_SOURCES})
target_include_directories(${FRAMEWORK_NAME} PRIVATE ${FRAMEWORK_PUBLIC_HEADERS} ${FRAMEWORK_PRIVATE_HEADERS})

target_include_directories(${FRAMEWORK_NAME} PRIVATE ${ENGINE_PUBLIC_HEADER_PATHS})
target_link_libraries(${FRAMEWORK_NAME} PRIVATE ${ENGINE_LIB_NAME})

set_target_properties(${FRAMEWORK_NAME} PROPERTIES LINKER_LANGUAGE CXX)

source_group(TREE ${SOURCE_DIR} FILES ${FRAMEWORK_PUBLIC_HEADERS} ${FRAMEWORK_PRIVATE_HEADERS} ${FRAMEWORK_PUBLIC_SOURCES} ${FRAMEWORK_PRIVATE_SOURCES})

##### CONFIG #####

set(CONFIG_DIR "${SOURCE_DIR}/Config")

configure_file(${PROJECT_NAME}Config.h.in "${CONFIG_DIR}/Public/${PROJECT_NAME}Config.h")

##### GOOGLE TEST BEGIN #####

#add_subdirectory(GoogleTest)

##### GOOGLE TEST END #####